import org.apache.tools.ant.filters.*

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'pmd'
apply plugin: 'application'
apply from: 'eclipse.gradle'

sourceCompatibility = 1.6
targetCompatibility = 1.6
group = 'gov.loc'

if(project.version == "unspecified"){
  project.version = "4.11-SNAPSHOT"
}

repositories {
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
  compile 'org.slf4j:slf4j-api:1.7.5',
	  'org.apache.commons:commons-compress:1.8.1',
    'commons-logging:commons-logging-api:1.1',
    'commons-logging:commons-logging:1.1.3',
    'commons-io:commons-io:2.4',
    'commons-codec:commons-codec:1.9',
    'org.apache.httpcomponents:httpclient:4.3.2',
    'org.apache.httpcomponents:httpmime:4.3.2',
    'com.martiansoftware:jsap:2.1',
    'dom4j:dom4j:1.6.1',
    'commons-net:commons-net:3.3',
    'org.apache.commons:commons-exec:1.2'

  runtime 'jaxen:jaxen:1.1.4',
    'classworlds:classworlds:1.1',
    'log4j:log4j:1.2.17'

  testCompile 'junit:junit:4.11',
    'org.mortbay.jetty:jetty:6.1.26',
    'org.jmock:jmock-junit4:2.5.1'
}

applicationDefaultJvmArgs = ["-Dapp.home=..", "-Dversion=${project.version}"]
mainClassName = "gov.loc.repository.bagit.driver.CommandLineBagDriver"

distZip {
  String baseZipDirectory = archiveName - ("." + extension)

  //include the log properties in a separate folder outside the jar for easy modification
  into("${baseZipDirectory}/conf"){ 
    from 'src/assembly/conf'
    include 'log4j.properties'
  }
  
  into("${baseZipDirectory}"){
    from '.'
    include '*.txt'
    include '*.md'
  }
}

test { //show test output
  testLogging.showStandardStreams = true
}

jacoco {
  toolVersion = "0.7.5.201505241946"
}

jacocoTestReport.dependsOn test
build.dependsOn jacocoTestReport

findbugsTest.enabled = false

findbugs {
  ignoreFailures = true //don't fail the gradle build if bugs are found
}

pmd {
  ruleSets = ["java-basic", "java-braces"]
  ignoreFailures = true //don't fail the gradle build if rules are broken
}

//due to http://issues.gradle.org/browse/GRADLE-2333 need to do a small hack to add the config folder to the generated script's classpath
startScripts {
  classpath += files('src/dist/XX_CONFIG_PLACEHOLDER_XX')
  doLast {
    def windowsScriptFile = file getWindowsScript()
    def unixScriptFile    = file getUnixScript()
    windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\XX_CONFIG_PLACEHOLDER_XX', '%APP_HOME%\\conf')
    unixScriptFile.text  = unixScriptFile.text.replace('$APP_HOME/lib/XX_CONFIG_PLACEHOLDER_XX', '$APP_HOME/conf')
  }
}

tasks.withType(Pmd) {
  reports {
      xml.enabled = false
      html.enabled = true
  }
}

//javadocs and sources required for uploading to maven central
task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

//artifacts need to be signed in order to upload them to maven central
signing {
//  required { !version.endsWith("SNAPSHOT") } //only sign an actual release
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      if(!project.hasProperty("ossrhUsername")){ //so travis CI doesn't break...
        project.ext.ossrhUsername = "foo"
        project.ext.ossrhPassword = "foo"
      }
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'bagit-java'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'The BAGIT LIBRARY is a software library intended to support the creation, manipulation, and validation of bags. Its current version is 0.97. It is version aware with the earliest supported version being 0.93.'
        url 'https://github.com/LibraryOfCongress/bagit-java'

        scm {
          connection 'scm:git:https://github.com/LibraryOfCongress/bagit-java'
          developerConnection 'scm:git:ssh://github.com/LibraryOfCongress/bagit-java'
          url 'https://github.com/LibraryOfCongress/bagit-java'
        }

        licenses {
          license {
            name 'No Copyright'
            url 'https://github.com/LibraryOfCongress/bagit-java/blob/master/LICENSE.txt'
          }
        }

        developers {
          developer {
            id 'johnscancella'
            name 'John Scancella'
            email 'jsca@loc.gov'
          }
        }
      }
    }
  }
}
